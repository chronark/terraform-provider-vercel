# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#
name: Tests
on:
  pull_request:
  # For systems with an upstream API that could drift unexpectedly (like most SaaS systems, etc.),
  # we recommend testing at a regular interval not necessarily tied to code changes. This will
  # ensure you are alerted to something breaking due to an API change, even if the code did not
  # change.
  schedule:
    - cron: "0 23 * * *"
jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: "1.15"
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2.3.3

      - name: Get dependencies
        run: |
          go mod download

      - name: Build
        run: |
          go build -v .

  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: "1.15"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2.3.3
     
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest


  # run acceptance tests in a matrix with Terraform core versions
  test:
    name: Acceptance test
    needs:
      - build
      - lint
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - "0.13.6"
          - "0.14.9"
          - "0.15.0-beta2"
          - "" # latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: "1.15"
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2.3.3

      - name: Get dependencies
        run: |
          go mod download

      - name: TF acceptance tests
        timeout-minutes: 10
        env:
          TF_ACC: "1"
          TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    
        run: |
          go test -v ./...

  # Get a single check for the branch protection rules.
  tests_ok:
    name: Tests OK
    needs: test
    runs-on: ubuntu-latest
    steps:
      - run: echo Success!
